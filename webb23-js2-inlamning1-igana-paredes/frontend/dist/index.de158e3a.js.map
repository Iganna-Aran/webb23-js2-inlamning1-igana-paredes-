{"mappings":"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","sources":["src/main.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\r\n  let playerName = \"\";\r\n  let playerScore = 0;\r\n\r\n\r\n\r\n  async function fetchAndDisplayHighscores() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:3000/highscores\");\r\n      const highscores = await response.json();\r\n\r\n      const highscoreList = document.getElementById(\"highscore-list\");\r\n\r\n      highscoreList.innerHTML = \"\";\r\n\r\n      highscores.forEach((score) => {\r\n        const listItem = document.createElement(\"li\");\r\n        listItem.textContent = `${score.name}: ${score.score}`;\r\n        highscoreList.appendChild(listItem);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching highscore:\", error);\r\n    }\r\n  }\r\n\r\n\r\n  function startGame() {\r\n    const playerNameInput = document.getElementById(\"playerName\");\r\n    playerName = playerNameInput.value.trim();\r\n  }\r\n\r\n  const startGameButton = document.getElementById(\"startGame\");\r\n  startGameButton.addEventListener(\"click\", function () {\r\n    startGame();\r\n    showGameOptions();\r\n  });\r\n  function showGameOptions() {\r\n    const gameOptionsContainer = document.getElementById(\"gameOptions\");\r\n    gameOptionsContainer.innerHTML = \"\";\r\n\r\n    const options = [\"rock\", \"paper\", \"scissors\"];\r\n\r\n    options.forEach((option) => {\r\n      const button = document.createElement(\"button\");\r\n      button.textContent = option;\r\n      button.addEventListener(\"click\", function () {\r\n        playerChoice = option;\r\n        playRound();\r\n      });\r\n      gameOptionsContainer.appendChild(button);\r\n    });\r\n  }\r\n  async function playRound() {\r\n    const options = [\"rock\", \"paper\", \"scissors\"];\r\n    const computerChoice = options[Math.floor(Math.random() * options.length)];\r\n    \r\n    const playerChoiceMessage = document.getElementById(\"playerChoiceMessage\");\r\n    playerChoiceMessage.textContent = `Player ${playerName} chose ${playerChoice}.`;\r\n    const aiChoiceMessage = document.getElementById(\"aiChoiceMessage\");\r\n    aiChoiceMessage.textContent = `AI chose ${computerChoice}.`;\r\n    \r\n    const winner = determineWinner(playerChoice, computerChoice);\r\n    \r\n    if (winner === \"player\") {\r\n      playerScore++;\r\n      const roundResultMessage = document.getElementById(\"roundResultMessage\");\r\n      roundResultMessage.textContent = `Congratulations, ${playerName} wins this round!`;\r\n      showPlayerScore();\r\n      fetchAndDisplayHighscores();\r\n    } else if (winner === \"ai\") {\r\n      const roundResultMessage = document.getElementById(\"roundResultMessage\");\r\n      roundResultMessage.textContent = `AI wins this round!`;\r\n      await updateHighscores();\r\n      fetchAndDisplayHighscores();\r\n      playerScore = 0;\r\n    } else {\r\n      const roundResultMessage = document.getElementById(\"roundResultMessage\");\r\n      roundResultMessage.textContent = `It's a tie!`;\r\n    }\r\n    \r\n\r\n  }\r\n  function determineWinner(playerChoice, computerChoice) {\r\n    if (playerChoice === computerChoice) {\r\n      return \"tie\";\r\n    } else if (\r\n      (playerChoice === \"rock\" && computerChoice === \"scissors\") ||\r\n      (playerChoice === \"paper\" && computerChoice === \"rock\") ||\r\n      (playerChoice === \"scissors\" && computerChoice === \"paper\")\r\n    ) {\r\n      return \"player\";\r\n    } else {\r\n      return \"ai\";\r\n    }\r\n  }\r\n\r\n\r\n  async function updateHighscores() {\r\n\r\n    const existingHighscores = await getHighscores();\r\n\r\n    console.log(\"Player Name:\", playerName);\r\n    console.log(\"Player Score:\", playerScore);\r\n\r\n    const newHighscore = { name: playerName, score: playerScore };\r\n    existingHighscores.push(newHighscore);\r\n\r\n    existingHighscores.sort((a, b) => b.score - a.score);\r\n\r\n    console.log(\"Existing Highscores:\", existingHighscores);\r\n\r\n    await fetch(\"http://localhost:3000/highscores\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newHighscore)\r\n    });\r\n  }\r\n  async function getHighscores() {\r\n    const response = await fetch(\"http://localhost:3000/highscores\");\r\n    const highscores = await response.json();\r\n    return highscores;\r\n  }\r\n\r\n\r\n  async function showPlayerScore() {\r\n    const playerScoreContainer = document.getElementById(\"playerScore\");\r\n    playerScoreContainer.textContent = `Player Score: ${playerScore}`;\r\n  }\r\n\r\n  fetchAndDisplayHighscores();\r\n  });"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}